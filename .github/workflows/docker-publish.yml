name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '25 4 * * *'
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  TEST_TAG: ${{ github.repository }}:test
  SHA_TMP: ${{ github.sha }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
    
      # extract short sha variable from github
      #- name: Add SHORT_SHA env property with commit short sha
      #  run: echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV
        
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      -
        name: Building the docker for testing first
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
          build-args: GITHUB_SHA=${{ env.SHA_TMP }}

      # Starting docker container locally on github runner
      # This section also runs a couple tests that will fail the build if they dont complete
      # + verifiying that a status code of 200 is returned
      # + verifying the correct SHA value is posted
      - name: Start docker container and running some tests
        run: | 
          # install jq if it's not installed
          sudo apt install jq
          #running docker container
          docker run -d --name innablr -p 5000:5000 ${{ env.TEST_TAG }}
          docker ps -a
          docker logs -f --until=10s innablr
          # testing response code and failing if non 200
          CODE=$(curl -LI --request GET --url http://0.0.0.0:5000/status -o /dev/null -w '%{http_code}\n' -s)
          echo $CODE
          if [[ "$CODE" -ne 200 ]] ; then
            exit 1
          else
            echo "Returned 200, continuing"
          fi
          #verifying that the displayed sha is correct
          SHA_TEST=$(curl http://0.0.0.0:5000/status | jq -r '."my-application"[].sha')
          echo "${{ env.SHA_TMP }}"
          echo "$SHA_TEST"
          if [ "${{ env.SHA_TMP }}" = "$SHA_TEST" ]; then
              echo "Sha values matched"
          else
              echo "Sha did not match"
              exit 1
          fi
          exit 0

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: GITHUB_SHA=$SHA_TMP
          

      
